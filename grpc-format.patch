--- grpc-1.50.2/src/core/ext/transport/binder/transport/binder_transport.cc.orig	2023-02-15 01:23:37.000000000 +0100
+++ grpc-1.50.2/src/core/ext/transport/binder/transport/binder_transport.cc	2023-04-06 17:07:42.199546237 +0200
@@ -129,7 +129,7 @@ static void set_pollset(grpc_transport*
 }
 
 static void set_pollset_set(grpc_transport*, grpc_stream*, grpc_pollset_set*) {
-  gpr_log(GPR_INFO, __func__);
+  gpr_log(GPR_INFO, "%s", __func__);
 }
 
 static void AssignMetadata(grpc_metadata_batch* mb,
@@ -621,7 +621,7 @@ static void perform_transport_op_locked(
 }
 
 static void perform_transport_op(grpc_transport* gt, grpc_transport_op* op) {
-  gpr_log(GPR_INFO, __func__);
+  gpr_log(GPR_INFO, "%s", __func__);
   grpc_binder_transport* gbt = reinterpret_cast<grpc_binder_transport*>(gt);
   op->handler_private.extra_arg = gbt;
   GRPC_BINDER_REF_TRANSPORT(gbt, "perform_transport_op");
@@ -643,7 +643,7 @@ static void destroy_stream_locked(void*
 
 static void destroy_stream(grpc_transport* /*gt*/, grpc_stream* gs,
                            grpc_closure* then_schedule_closure) {
-  gpr_log(GPR_INFO, __func__);
+  gpr_log(GPR_INFO, "%s", __func__);
   grpc_binder_stream* gbs = reinterpret_cast<grpc_binder_stream*>(gs);
   gbs->destroy_stream_then_closure = then_schedule_closure;
   gbs->t->combiner->Run(GRPC_CLOSURE_INIT(&gbs->destroy_stream,
@@ -662,7 +662,7 @@ static void destroy_transport_locked(voi
 }
 
 static void destroy_transport(grpc_transport* gt) {
-  gpr_log(GPR_INFO, __func__);
+  gpr_log(GPR_INFO, "%s", __func__);
   grpc_binder_transport* gbt = reinterpret_cast<grpc_binder_transport*>(gt);
   gbt->combiner->Run(
       GRPC_CLOSURE_CREATE(destroy_transport_locked, gbt, nullptr),
@@ -670,7 +670,7 @@ static void destroy_transport(grpc_trans
 }
 
 static grpc_endpoint* get_endpoint(grpc_transport*) {
-  gpr_log(GPR_INFO, __func__);
+  gpr_log(GPR_INFO, "%s", __func__);
   return nullptr;
 }
 
@@ -706,7 +706,7 @@ grpc_binder_transport::grpc_binder_trans
           is_client ? "binder_transport_client" : "binder_transport_server",
           GRPC_CHANNEL_READY),
       refs(1, nullptr) {
-  gpr_log(GPR_INFO, __func__);
+  gpr_log(GPR_INFO, "%s", __func__);
   base.vtable = get_vtable();
   transport_stream_receiver =
       std::make_shared<grpc_binder::TransportStreamReceiverImpl>(
@@ -736,7 +736,7 @@ grpc_transport* grpc_create_binder_trans
     std::unique_ptr<grpc_binder::Binder> endpoint_binder,
     std::shared_ptr<grpc::experimental::binder::SecurityPolicy>
         security_policy) {
-  gpr_log(GPR_INFO, __func__);
+  gpr_log(GPR_INFO, "%s", __func__);
 
   GPR_ASSERT(endpoint_binder != nullptr);
   GPR_ASSERT(security_policy != nullptr);
@@ -751,7 +751,7 @@ grpc_transport* grpc_create_binder_trans
     std::unique_ptr<grpc_binder::Binder> client_binder,
     std::shared_ptr<grpc::experimental::binder::SecurityPolicy>
         security_policy) {
-  gpr_log(GPR_INFO, __func__);
+  gpr_log(GPR_INFO, "%s", __func__);
 
   GPR_ASSERT(client_binder != nullptr);
   GPR_ASSERT(security_policy != nullptr);
